<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李特个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.litede.cn/"/>
  <updated>2019-10-05T08:40:38.280Z</updated>
  <id>http://www.litede.cn/</id>
  
  <author>
    <name>李特</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot读取外部配置文件</title>
    <link href="http://www.litede.cn/2019/10/05/SpringBoot%E8%AF%BB%E5%8F%96%E5%A4%96%E9%83%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://www.litede.cn/2019/10/05/SpringBoot读取外部配置文件/</id>
    <published>2019-10-05T08:26:07.000Z</published>
    <updated>2019-10-05T08:40:38.280Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>有时候项目打包成一个jar 或者war ,通过java -jar 命令运行springboot 项目，因为springboot<br>项目有自己的application.properties<br>配置文件，但是我们打完包之后，它也会打到包里边，倒是也能打开压缩包修改properties 文件，但是也是较为麻烦。</p><p>现在有如下需求，比如客户需要在很多个服务器部署一套项目，但是它们的数据库连接不一样，我们不能针对于这么多服务器，多次打包，很恶心，当然可以打完包，复制一堆，分别修改压缩包里边的配置文件。</p><p>springboot 有读取外部配置文件的方法，如下优先级：</p><p>第一种是在jar包的同一目录下建一个config文件夹，然后把配置文件放到这个文件夹下。</p><p>第二种是直接把配置文件放到jar包的同级目录。</p><p>第三种在classpath下建一个config文件夹，然后把配置文件放进去。</p><p>第四种是在classpath下直接放配置文件。</p><p>看到如上的优先级了吗？也就是说springboot<br>默认是优先读取它本身同级目录下的一个config/application.properties<br>文件的。我们通常在src/main/resources 文件夹下创建的application.properties<br>文件的优先级竟然是最低的！！！。</p></blockquote><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><ol><li>新建Project（本人使用的是IDEA），很简单，此处不再赘述。</li><li>在项目根目录下新建config文件夹</li><li>在config文件夹下新建application.properties或application.yml文件<br>如图所示：<br><img src="/images/springboot%E8%AF%BB%E5%8F%96%E5%A4%96%E9%83%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" alt="如图所示"></li></ol><hr><p> 此处的优先级大于src目录下的application.yml文件. 我们可以把一些公共的配置文件代码放置到此处，这样就达到配置文件代码解耦合的目的了</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;有时候项目打包成一个jar 或者war ,通过java -jar 命令运行springboot 项目，因为springboot&lt;br&gt;项目有自己的application.properties&lt;br&gt;配置文件，但是我们打完包之后，它也会打到包里边，倒
      
    
    </summary>
    
    
      <category term="SpringBoot" scheme="http://www.litede.cn/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://www.litede.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo和Gitpage搭建博客(二)</title>
    <link href="http://www.litede.cn/2019/09/20/Hexo%E4%BD%BF%E7%94%A8Next%E4%B8%BB%E9%A2%98/"/>
    <id>http://www.litede.cn/2019/09/20/Hexo使用Next主题/</id>
    <published>2019-09-20T09:30:57.000Z</published>
    <updated>2019-09-20T10:05:21.061Z</updated>
    
    <content type="html"><![CDATA[<p>在进行了<strong><a href="http://www.litede.cn/2019/09/20/%E4%BD%BF%E7%94%A8Hexo%E5%92%8CGitpage%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/">Hexo和GitPage搭建博客</a>之后需要将本地博客推送到GitPage上，具体操作下面在文章内介绍。</strong></p><h2 id="一、注册Github"><a href="#一、注册Github" class="headerlink" title="一、注册Github"></a>一、注册Github</h2><p>&emsp;&emsp;首先如果你还没有 Github 账号的先注册一个，此处不赘述</p><hr><h2 id="二、创建仓库"><a href="#二、创建仓库" class="headerlink" title="二、创建仓库"></a>二、创建仓库</h2><p>点击 Start project 或者下面的 new repository 创建一个新的仓库</p><p><img src="/images/%E5%88%9B%E5%BB%BAgithub%E4%BB%93%E5%BA%93.png" alt><br>注：由于我已经有相同的仓库名了 所以此处会报错，请忽略此错误</p><p>安装 Hexo 完成后，再执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init myBlog</span><br><span class="line">cd myBlog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>注：myBlog为文件夹的名字 可根据自己的需求修改</p><h2 id="三、配置SSH-Key"><a href="#三、配置SSH-Key" class="headerlink" title="三、配置SSH Key"></a>三、配置SSH Key</h2><p>要使用 git 工具首先要配置一下SSH key，为部署本地博客到 Github 做准备。<br>如有需要请自行Google，此处不再赘述</p><h2 id="四、部署到Github"><a href="#四、部署到Github" class="headerlink" title="四、部署到Github"></a>四、部署到Github</h2><p>此时，本地和Github的工作做得差不了，是时候把它们两个连接起来了。</p><ul><li>第一：打开项目根目录下的 _config.yml 配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）<br><img src="/images/github%E5%90%8D%E7%A7%B0.jpg" alt><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">    github: git@github.com:@@@/@@@.github.io.git</span><br></pre></td></tr></table></figure></li></ul><p>注： @@@/@@@ 需要修改为自己的链接</p><ul><li>第二：要安装一个部署插件 hexo-deployer-git。</li></ul><p><code>npm install hexo-deployer-git --save</code></p><p>最后执行以下命令就可以部署上传啦</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>命令提示：</p><p><code>hexo g</code> 生成环境<br><code>hexo d</code> 部署环境<br><code>hexo s</code> 启动服务预览</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在进行了&lt;strong&gt;&lt;a href=&quot;http://www.litede.cn/2019/09/20/%E4%BD%BF%E7%94%A8Hexo%E5%92%8CGitpage%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/&quot;&gt;Hexo和Gi
      
    
    </summary>
    
    
      <category term="Hexo+GitPage" scheme="http://www.litede.cn/categories/Hexo-GitPage/"/>
    
    
      <category term="Hexo+GitPage" scheme="http://www.litede.cn/tags/Hexo-GitPage/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo和Gitpage搭建博客(一)</title>
    <link href="http://www.litede.cn/2019/09/20/%E4%BD%BF%E7%94%A8Hexo%E5%92%8CGitpage%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://www.litede.cn/2019/09/20/使用Hexo和Gitpage搭建博客/</id>
    <published>2019-09-20T08:29:50.000Z</published>
    <updated>2019-09-20T10:05:17.799Z</updated>
    
    <content type="html"><![CDATA[<p><strong>作为一个程序员，个人博客可以说是不可或缺的。它可以记录自己技术成长的过程，也可以供别人参考、给他人提供方便，还可以锻炼自己的表达能力等等。这几年陆陆续续的在很多地方写过博客（CSDN、个人服务器），但是都有一些缺陷，所以最后决定用GitPage作为自己博客的新起点</strong></p><blockquote><p>Github Page 是 Github 提供的一种免费的静态网页托管服务（所以想想免费的空间不用也挺浪费的哈哈哈），可以用来托管博客、项目官网等静态网页。支持 Jekyll、Hugo、Hexo 编译静态资源，这次我们的主角就是 Hexo 了，具体的内容下面在文章内介绍。</p></blockquote><h2 id="一、准备环境"><a href="#一、准备环境" class="headerlink" title="一、准备环境"></a>一、准备环境</h2><p>&emsp;&emsp;1.node.js<br>&emsp;&emsp;2.git<br><strong>安装非常简单 此处不再赘述</strong><br>&emsp;&emsp;安装验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git version</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><hr><h2 id="二、安装Hexo"><a href="#二、安装Hexo" class="headerlink" title="二、安装Hexo"></a>二、安装Hexo</h2><p>在命令行输入执行以下命令：</p><p><code>npm install -g hexo-cli</code></p><p>安装 Hexo 完成后，再执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init myBlog</span><br><span class="line">cd myBlog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>注：myBlog为文件夹的名字 可根据自己的需求修改</p><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├── _config.yml # 网站的配置信息，您可以在此配置大部分的参数。 </span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds # 模版文件夹</span><br><span class="line">├── source  # 资源文件夹，除 _posts 文件，其他以下划线_开头的文件或者文件夹不会被编译打包到public文件夹</span><br><span class="line">|   ├── _drafts # 草稿文件</span><br><span class="line">|   └── _posts # 文章Markdowm文件 </span><br><span class="line">└── themes  # 主题文件夹</span><br></pre></td></tr></table></figure><p>好了，如果上面的命令都没报错的话，就恭喜了，运行 hexo s 命令，其中 s 是 server 的缩写，在浏览器中输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 回车就可以预览效果了。<br><code>hexo s</code></p><p>以下是我本地的预览效果，更换了 next 主题的，默认不是这个主题。<br><img src="/images/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%88%AA%E5%9B%BE.png" alt="个人博客截图" title="个人博客截图"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;作为一个程序员，个人博客可以说是不可或缺的。它可以记录自己技术成长的过程，也可以供别人参考、给他人提供方便，还可以锻炼自己的表达能力等等。这几年陆陆续续的在很多地方写过博客（CSDN、个人服务器），但是都有一些缺陷，所以最后决定用GitPage作为自己博客的
      
    
    </summary>
    
    
      <category term="Hexo+GitPage" scheme="http://www.litede.cn/categories/Hexo-GitPage/"/>
    
    
      <category term="Hexo+GitPage" scheme="http://www.litede.cn/tags/Hexo-GitPage/"/>
    
  </entry>
  
</feed>
